<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rent.user.provider.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.heikes.rent_common.pojo.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="id_card" jdbcType="VARCHAR" property="idCard" />
        <result column="user_status" jdbcType="VARCHAR" property="userStatus" />
        <result column="user_image" jdbcType="VARCHAR" property="userImage" />
        <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.heikes.rent_common.pojo.Users">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="id_card" jdbcType="VARCHAR" property="idCard" />
        <result column="user_status" jdbcType="VARCHAR" property="userStatus" />
        <result column="user_image" jdbcType="VARCHAR" property="userImage" />
        <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
        <association property="role" javaType="com.heikes.rent_common.pojo.Role">
            <id column="rid" jdbcType="BIGINT" property="id"></id>
            <id column="role_name" jdbcType="VARCHAR" property="roleName"></id>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.heikes.rent_common.pojo.User">
    insert into user (id, user_name, password, user_account, phone, id_card, user_status, user_image, comment_status)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}
            , #{phone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}, #{commentStatus})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.heikes.rent_common.pojo.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        user_account = #{userAccount,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        id_card = #{idCard,jdbcType=VARCHAR},
        user_status = #{userStatus,jdbcType=VARCHAR},
        user_image = #{userImage,jdbcType=VARCHAR},
        comment_status = #{commentStatus}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateColumnById">
        update user
        <set>
            <if test="password neq null">
                password = #{password},
            </if>
            <if test="phone neq null">
                phone = #{phone},
            </if>
            <if test="userName neq null">
                user_name = #{userName},
            </if>
            <if test="userImage neq null">
                user_image = #{userImage},
            </if>
            <if test="userStatus neq null">
                user_status = #{userStatus},
            </if>
        </set>
        where id = #{userId}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_name, password, user_account, phone, id_card, user_status, user_image, comment_status
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, user_name, password, user_account, phone, id_card, user_status, user_image, comment_status
    from user
  </select>
    <select id="selectUserImg" parameterType="java.lang.String" resultMap="BaseResultMap">
        select user_image
        from user
        where user_account = #{userAccount}
    </select>
    <select id="selectByLogin" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, user_status
        from user
        where user_account = #{userAccount} and password = #{password}
    </select>
    <select id="selectUserByColumn" resultMap="BaseResultMap">
        select id, user_name, password, user_account, phone, id_card, user_status, user_image, comment_status
        from user
        <where>
            <if test="phone neq null">
                and phone = #{phone}
            </if>
            <if test="userId neq null">
                and id = #{userId}
            </if>
            <if test="userAccount neq null">
                and user_account = #{userAccount}
            </if>
            <if test="password neq null">
                and password = #{password}
            </if>
            <if test="id neq null">
                and id = #{userId}
            </if>
        </where>
    </select>
    <select id="selectUserListByColumn" resultMap="BaseResultMap2">
        SELECT u.*, r.id rid, r.role_name
        FROM user u INNER JOIN user_role ur
        ON u.id = ur.user_id 
        INNER JOIN role r ON ur.`role_id` = r.`id`
        <where>
            <if test="requestRoleId neq 1">
                <if test="roleId neq 0">
                    and r.`id` = #{roleId}
                </if>
                <if test="roleId eq 0">
                    and r.`id` != 1
                </if>
            </if>
            <if test="requestRoleId eq 1">
                <if test="roleId neq 0">
                    and r.`id` = #{roleId}
                </if>
            </if>
            <if test="userName neq null">
                and user_name like CONCAT('%', #{userName}, '%')
            </if>
            <if test="userAccount neq null">
                and user_account = #{userAccount}
            </if>
        </where>
        order by r.`id`
    </select>
</mapper>
